import { getCurrentTranslations, TranslationStrings } from '../utils/translations';

describe('Translation Utilities', () => {
  test('returns English translations by default', () => {
    const translations = getCurrentTranslations('en');
    
    expect(translations.businessPlatform).toBe('Complete end-to-end solution for textile manufacturing business');
    expect(translations.leadManagement).toBe('Lead Management');
    expect(translations.quotationOrders).toBe('Quotations & Orders');
    expect(translations.salesOrder).toBe('Sales Orders');
    expect(translations.customers).toBe('Customers');
    expect(translations.backToDashboard).toBe('тЖР Back to Dashboard');
    expect(translations.call).toBe('ЁЯУЮ Call');
    expect(translations.whatsapp).toBe('ЁЯУ▒ WhatsApp');
  });

  test('returns Gujarati translations correctly', () => {
    const translations = getCurrentTranslations('gu');
    
    expect(translations.businessPlatform).toBe('ркЯрлЗркХрлНрк╕ркЯрк╛ркИрк▓ ркорлЗркирлНркпрлБрклрлЗркХрлНркЪрк░рк┐ркВркЧ ркмрк┐ркЭркирлЗрк╕ ркорк╛ркЯрлЗ рк╕ркВрккрлВрк░рлНркг рк╕рлЛрк▓рлНркпрлБрк╢рки');
    expect(translations.leadManagement).toBe('рк▓рлАркб ркорлЗркирлЗркЬркорлЗркирлНркЯ');
    expect(translations.quotationOrders).toBe('ркХрлЛркЯрлЗрк╢рки ркЕркирлЗ ркУрк░рлНркбрк░');
    expect(translations.salesOrder).toBe('рк╕рлЗрк▓рлНрк╕ ркУрк░рлНркбрк░');
    expect(translations.customers).toBe('ркЧрлНрк░рк╛рк╣ркХрлЛ');
    expect(translations.backToDashboard).toBe('тЖР ркбрлЗрк╢ркмрлЛрк░рлНркб рккрк░ рккрк╛ркЫрк╛ ркЬрк╛ркУ');
    expect(translations.call).toBe('ЁЯУЮ ркХрлЙрк▓');
    expect(translations.whatsapp).toBe('ЁЯУ▒ рк╡рлЛркЯрлНрк╕ркПркк');
  });

  test('returns Hindi translations correctly', () => {
    const translations = getCurrentTranslations('hi');
    
    expect(translations.businessPlatform).toBe('рдЯреЗрдХреНрд╕рдЯрд╛рдЗрд▓ рдореИрдиреНрдпреБрдлреИрдХреНрдЪрд░рд┐рдВрдЧ рдмрд┐рдЬрдиреЗрд╕ рдХреЗ рд▓рд┐рдП рд╕рдВрдкреВрд░реНрдг рд╕рдорд╛рдзрд╛рди');
    expect(translations.leadManagement).toBe('рд▓реАрдб рдкреНрд░рдмрдВрдзрди');
    expect(translations.quotationOrders).toBe('рдХреЛрдЯреЗрд╢рди рдФрд░ рдСрд░реНрдбрд░');
    expect(translations.salesOrder).toBe('рд╕реЗрд▓реНрд╕ рдСрд░реНрдбрд░');
    expect(translations.customers).toBe('рдЧреНрд░рд╛рд╣рдХ');
    expect(translations.backToDashboard).toBe('тЖР рдбреИрд╢рдмреЛрд░реНрдб рдкрд░ рд╡рд╛рдкрд╕ рдЬрд╛рдПрдВ');
    expect(translations.call).toBe('ЁЯУЮ рдХреЙрд▓');
    expect(translations.whatsapp).toBe('ЁЯУ▒ рд╡реНрд╣рд╛рдЯреНрд╕рдРрдк');
  });

  test('falls back to English for unknown language', () => {
    const translations = getCurrentTranslations('fr');
    
    expect(translations.businessPlatform).toBe('Complete end-to-end solution for textile manufacturing business');
    expect(translations.leadManagement).toBe('Lead Management');
    expect(translations.quotationOrders).toBe('Quotations & Orders');
  });

  test('returns proper dashboard translations for all languages', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    // Welcome message
    expect(enTranslations.welcome).toBe('Welcome to Your Business Hub');
    expect(guTranslations.welcome).toBe('ркдркорк╛рк░рк╛ ркмрк┐ркЭркирлЗрк╕ рк╣ркмркорк╛ркВ ркЖрккркирлБркВ рк╕рлНрк╡рк╛ркЧркд');
    expect(hiTranslations.welcome).toBe('рдЖрдкрдХреЗ рдмрд┐рдЬрдиреЗрд╕ рд╣рдм рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд');
    
    // Tagline
    expect(enTranslations.tagline).toBe('360┬░ Business Platform for Gujarat Textile Manufacturers');
    expect(guTranslations.tagline).toBe('ркЧрлБркЬрк░рк╛ркд ркЯрлЗркХрлНрк╕ркЯрк╛ркИрк▓ ркЙркдрлНрккрк╛ркжркХрлЛ ркорк╛ркЯрлЗ 360┬░ ркмрк┐ркЭркирлЗрк╕ рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко');
    expect(hiTranslations.tagline).toBe('рдЧреБрдЬрд░рд╛рдд рдЯреЗрдХреНрд╕рдЯрд╛рдЗрд▓ рдирд┐рд░реНрдорд╛рддрд╛рдУрдВ рдХреЗ рд▓рд┐рдП 360┬░ рдмрд┐рдЬрдиреЗрд╕ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо');
  });

  test('returns proper feature descriptions for all languages', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    // Lead Management descriptions
    expect(enTranslations.leadManagementDesc).toBe('Track and convert potential customers');
    expect(guTranslations.leadManagementDesc).toBe('рк╕ркВркнрк╡рк┐ркд ркЧрлНрк░рк╛рк╣ркХрлЛркирлЗ ркЯрлНрк░рлЗркХ ркЕркирлЗ ркХркирлНрк╡рк░рлНркЯ ркХрк░рлЛ');
    expect(hiTranslations.leadManagementDesc).toBe('рд╕рдВрднрд╛рд╡рд┐рдд рдЧреНрд░рд╛рд╣рдХреЛрдВ рдХреЛ рдЯреНрд░реИрдХ рдФрд░ рдХрдиреНрд╡рд░реНрдЯ рдХрд░реЗрдВ');
    
    // Quotation descriptions
    expect(enTranslations.quotationOrdersDesc).toBe('Create quotes and manage approvals');
    expect(guTranslations.quotationOrdersDesc).toBe('ркХрлЛркЯ ркмркирк╛рк╡рлЛ ркЕркирлЗ ркоркВркЬрлВрк░рлА ркорлЗркирлЗркЬ ркХрк░рлЛ');
    expect(hiTranslations.quotationOrdersDesc).toBe('рдХреЛрдЯ рдмрдирд╛рдПрдВ рдФрд░ рдЕрдкреНрд░реВрд╡рд▓ рдореИрдиреЗрдЬ рдХрд░реЗрдВ');
  });

  test('returns proper lead types for all languages', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    expect(enTranslations.hotLead).toBe('Hot Lead');
    expect(guTranslations.hotLead).toBe('рк╣рлЛркЯ рк▓рлАркб');
    expect(hiTranslations.hotLead).toBe('рд╣реЙрдЯ рд▓реАрдб');
    
    expect(enTranslations.warmLead).toBe('Warm Lead');
    expect(guTranslations.warmLead).toBe('рк╡рлЛрк░рлНрко рк▓рлАркб');
    expect(hiTranslations.warmLead).toBe('рд╡рд╛рд░реНрдо рд▓реАрдб');
    
    expect(enTranslations.coldLead).toBe('Cold Lead');
    expect(guTranslations.coldLead).toBe('ркХрлЛрк▓рлНркб рк▓рлАркб');
    expect(hiTranslations.coldLead).toBe('рдХреЛрд▓реНрдб рд▓реАрдб');
  });

  test('returns proper status translations for all languages', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    expect(enTranslations.pending).toBe('Pending');
    expect(guTranslations.pending).toBe('рккрлЗркирлНркбрк┐ркВркЧ');
    expect(hiTranslations.pending).toBe('рдкреЗрдВрдбрд┐рдВрдЧ');
    
    expect(enTranslations.approved).toBe('Approved');
    expect(guTranslations.approved).toBe('ркоркВркЬрлВрк░');
    expect(hiTranslations.approved).toBe('рдЕрдкреНрд░реВрд╡реНрдб');
    
    expect(enTranslations.converted).toBe('Converted');
    expect(guTranslations.converted).toBe('ркХркирлНрк╡рк░рлНркЯ ркеркпрлЗрк▓');
    expect(hiTranslations.converted).toBe('рдХрдиреНрд╡рд░реНрдЯ рдХрд┐рдпрд╛ рдЧрдпрд╛');
  });

  test('returns proper order and quote field translations', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    // Quote fields
    expect(enTranslations.quoteNumber).toBe('Quote Number');
    expect(guTranslations.quoteNumber).toBe('ркХрлЛркЯ ркиркВркмрк░');
    expect(hiTranslations.quoteNumber).toBe('рдХреЛрдЯ рдирдВрдмрд░');
    
    expect(enTranslations.quoteDate).toBe('Quote Date');
    expect(guTranslations.quoteDate).toBe('ркХрлЛркЯ ркдрк╛рк░рлАркЦ');
    expect(hiTranslations.quoteDate).toBe('рдХреЛрдЯ рддрд╛рд░реАрдЦ');
    
    // Order fields
    expect(enTranslations.orderNumber).toBe('Order Number');
    expect(guTranslations.orderNumber).toBe('ркУрк░рлНркбрк░ ркиркВркмрк░');
    expect(hiTranslations.orderNumber).toBe('рдСрд░реНрдбрд░ рдирдВрдмрд░');
    
    expect(enTranslations.orderDate).toBe('Order Date');
    expect(guTranslations.orderDate).toBe('ркУрк░рлНркбрк░ ркдрк╛рк░рлАркЦ');
    expect(hiTranslations.orderDate).toBe('рдСрд░реНрдбрд░ рддрд╛рд░реАрдЦ');
  });

  test('returns proper business field translations', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    expect(enTranslations.material).toBe('Material');
    expect(guTranslations.material).toBe('рк╕рк╛ркоркЧрлНрк░рлА');
    expect(hiTranslations.material).toBe('рд╕рд╛рдордЧреНрд░реА');
    
    expect(enTranslations.specification).toBe('Specification');
    expect(guTranslations.specification).toBe('рк╕рлНрккрлЗрк╕рк┐рклрк┐ркХрлЗрк╢рки');
    expect(hiTranslations.specification).toBe('рд╕реНрдкреЗрд╕рд┐рдлрд┐рдХреЗрд╢рди');
    
    expect(enTranslations.budget).toBe('Budget');
    expect(guTranslations.budget).toBe('ркмркЬрлЗркЯ');
    expect(hiTranslations.budget).toBe('рдмрдЬрдЯ');
    
    expect(enTranslations.delivery).toBe('Delivery');
    expect(guTranslations.delivery).toBe('ркбрк┐рк▓рк┐рк╡рк░рлА');
    expect(hiTranslations.delivery).toBe('рдбрд┐рд▓реАрд╡рд░реА');
  });

  test('returns proper payment translations', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    expect(enTranslations.totalAmount).toBe('Total Amount');
    expect(guTranslations.totalAmount).toBe('ркХрлБрк▓ рк░ркХрко');
    expect(hiTranslations.totalAmount).toBe('рдХреБрд▓ рд░рд╛рд╢рд┐');
    
    expect(enTranslations.pendingPayment).toBe('Pending Payment');
    expect(guTranslations.pendingPayment).toBe('рккрлЗркирлНркбрк┐ркВркЧ рккрлЗркорлЗркирлНркЯ');
    expect(hiTranslations.pendingPayment).toBe('рдкреЗрдВрдбрд┐рдВрдЧ рдкреЗрдореЗрдВрдЯ');
    
    expect(enTranslations.paymentReceived).toBe('Payment Received');
    expect(guTranslations.paymentReceived).toBe('рккрлЗркорлЗркирлНркЯ ркорк│рлЗрк▓');
    expect(hiTranslations.paymentReceived).toBe('рдкреЗрдореЗрдВрдЯ рдкреНрд░рд╛рдкреНрдд');
  });

  test('returns proper customer search translations', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    expect(enTranslations.searchCustomers).toBe('Search customers by name, location, or specialization...');
    expect(guTranslations.searchCustomers).toBe('ркирк╛рко, рк╕рлНркерк│ ркЕркерк╡рк╛ рк╡рк┐рк╢рлЗрк╖ркдрк╛ ркжрлНрк╡рк╛рк░рк╛ ркЧрлНрк░рк╛рк╣ркХрлЛ рк╢рлЛркзрлЛ...');
    expect(hiTranslations.searchCustomers).toBe('рдирд╛рдо, рд╕реНрдерд╛рди рдпрд╛ рд╡рд┐рд╢реЗрд╖рддрд╛ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдЧреНрд░рд╛рд╣рдХреЛрдВ рдХреЛ рдЦреЛрдЬреЗрдВ...');
  });

  test('returns proper voice command translations', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    expect(enTranslations.voiceCommands).toBe('Voice Commands (Speak in Gujarati, Hindi, or English)');
    expect(guTranslations.voiceCommands).toBe('рк╡рлЙркИрк╕ ркХркорк╛ркирлНркбрлНрк╕ (ркЧрлБркЬрк░рк╛ркдрлА, рк╣рк┐ркВркжрлА, ркЕркерк╡рк╛ ркЕркВркЧрлНрк░рлЗркЬрлАркорк╛ркВ ркмрлЛрк▓рлЛ)');
    expect(hiTranslations.voiceCommands).toBe('рд╡реЙрдпрд╕ рдХрдорд╛рдВрдб (рдЧреБрдЬрд░рд╛рддреА, рд╣рд┐рдВрджреА, рдпрд╛ рдЕрдВрдЧреНрд░реЗрдЬреА рдореЗрдВ рдмреЛрд▓реЗрдВ)');
    
    expect(enTranslations.voiceExample1).toBe('Add new fabric inquiry from Mumbai');
    expect(guTranslations.voiceExample1).toBe('ркорлБркВркмркИркерлА ркирк╡рлА рклрлЗркмрлНрк░рк┐ркХ рккрлВркЫрккрк░ркЫ ркЙркорлЗрк░рлЛ');
    expect(hiTranslations.voiceExample1).toBe('рдореБрдВрдмрдИ рд╕реЗ рдирдИ рдлреИрдмреНрд░рд┐рдХ рдкреВрдЫрддрд╛рдЫ рдЬреЛрдбрд╝реЗрдВ');
  });

  test('handles undefined language gracefully', () => {
    const translations = getCurrentTranslations(undefined as any);
    
    expect(translations.leadManagement).toBe('Lead Management');
    expect(translations.businessPlatform).toBe('Complete end-to-end solution for textile manufacturing business');
  });

  test('handles null language gracefully', () => {
    const translations = getCurrentTranslations(null as any);
    
    expect(translations.leadManagement).toBe('Lead Management');
    expect(translations.businessPlatform).toBe('Complete end-to-end solution for textile manufacturing business');
  });

  test('handles empty string language gracefully', () => {
    const translations = getCurrentTranslations('');
    
    expect(translations.leadManagement).toBe('Lead Management');
    expect(translations.businessPlatform).toBe('Complete end-to-end solution for textile manufacturing business');
  });

  test('all translation objects have the same keys', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    const enKeys = Object.keys(enTranslations).sort();
    const guKeys = Object.keys(guTranslations).sort();
    const hiKeys = Object.keys(hiTranslations).sort();
    
    expect(enKeys).toEqual(guKeys);
    expect(enKeys).toEqual(hiKeys);
    expect(guKeys).toEqual(hiKeys);
  });

  test('no translation strings are empty', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    Object.values(enTranslations).forEach(value => {
      expect(value.trim()).not.toBe('');
    });
    
    Object.values(guTranslations).forEach(value => {
      expect(value.trim()).not.toBe('');
    });
    
    Object.values(hiTranslations).forEach(value => {
      expect(value.trim()).not.toBe('');
    });
  });

  test('interface matches implementation for all languages', () => {
    const enTranslations = getCurrentTranslations('en');
    const guTranslations = getCurrentTranslations('gu');
    const hiTranslations = getCurrentTranslations('hi');
    
    // Check that all objects satisfy the TranslationStrings interface
    expect(enTranslations).toHaveProperty('backToDashboard');
    expect(enTranslations).toHaveProperty('businessPlatform');
    expect(enTranslations).toHaveProperty('leadManagement');
    expect(enTranslations).toHaveProperty('quotationOrders');
    expect(enTranslations).toHaveProperty('customers');
    
    expect(guTranslations).toHaveProperty('backToDashboard');
    expect(guTranslations).toHaveProperty('businessPlatform');
    expect(guTranslations).toHaveProperty('leadManagement');
    expect(guTranslations).toHaveProperty('quotationOrders');
    expect(guTranslations).toHaveProperty('customers');
    
    expect(hiTranslations).toHaveProperty('backToDashboard');
    expect(hiTranslations).toHaveProperty('businessPlatform');
    expect(hiTranslations).toHaveProperty('leadManagement');
    expect(hiTranslations).toHaveProperty('quotationOrders');
    expect(hiTranslations).toHaveProperty('customers');
  });
});